/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./all-tests.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./all-tests.js":
/*!**********************!*\
  !*** ./all-tests.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("context = __webpack_require__(\"./tests sync recursive \\\\.js$\");\ncontext.keys().forEach(context);\nmodule.exports = context;\n\n//# sourceURL=webpack:///./all-tests.js?");

/***/ }),

/***/ "./node_modules/mock-socket/dist/mock-socket.js":
/*!******************************************************!*\
  !*** ./node_modules/mock-socket/dist/mock-socket.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function (global, factory) {\n\t true ? factory(exports) :\n\tundefined;\n}(this, (function (exports) { 'use strict';\n\n/*\n* This delay allows the thread to finish assigning its on* methods\n* before invoking the delay callback. This is purely a timing hack.\n* http://geekabyte.blogspot.com/2014/01/javascript-effect-of-setting-settimeout.html\n*\n* @param {callback: function} the callback which will be invoked after the timeout\n* @parma {context: object} the context in which to invoke the function\n*/\nfunction delay(callback, context) {\n  setTimeout(function (timeoutContext) { return callback.call(timeoutContext); }, 4, context);\n}\n\nfunction reject(array, callback) {\n  var results = [];\n  array.forEach(function (itemInArray) {\n    if (!callback(itemInArray)) {\n      results.push(itemInArray);\n    }\n  });\n\n  return results;\n}\n\nfunction filter(array, callback) {\n  var results = [];\n  array.forEach(function (itemInArray) {\n    if (callback(itemInArray)) {\n      results.push(itemInArray);\n    }\n  });\n\n  return results;\n}\n\n/*\n* EventTarget is an interface implemented by objects that can\n* receive events and may have listeners for them.\n*\n* https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n*/\nvar EventTarget = function EventTarget() {\n  this.listeners = {};\n};\n\n/*\n* Ties a listener function to an event type which can later be invoked via the\n* dispatchEvent method.\n*\n* @param {string} type - the type of event (ie: 'open', 'message', etc.)\n* @param {function} listener - the callback function to invoke whenever an event is dispatched matching the given type\n* @param {boolean} useCapture - N/A TODO: implement useCapture functionality\n*/\nEventTarget.prototype.addEventListener = function addEventListener (type, listener /* , useCapture */) {\n  if (typeof listener === 'function') {\n    if (!Array.isArray(this.listeners[type])) {\n      this.listeners[type] = [];\n    }\n\n    // Only add the same function once\n    if (filter(this.listeners[type], function (item) { return item === listener; }).length === 0) {\n      this.listeners[type].push(listener);\n    }\n  }\n};\n\n/*\n* Removes the listener so it will no longer be invoked via the dispatchEvent method.\n*\n* @param {string} type - the type of event (ie: 'open', 'message', etc.)\n* @param {function} listener - the callback function to invoke whenever an event is dispatched matching the given type\n* @param {boolean} useCapture - N/A TODO: implement useCapture functionality\n*/\nEventTarget.prototype.removeEventListener = function removeEventListener (type, removingListener /* , useCapture */) {\n  var arrayOfListeners = this.listeners[type];\n  this.listeners[type] = reject(arrayOfListeners, function (listener) { return listener === removingListener; });\n};\n\n/*\n* Invokes all listener functions that are listening to the given event.type property. Each\n* listener will be passed the event as the first argument.\n*\n* @param {object} event - event object which will be passed to all listeners of the event.type property\n*/\nEventTarget.prototype.dispatchEvent = function dispatchEvent (event) {\n    var this$1 = this;\n    var customArguments = [], len = arguments.length - 1;\n    while ( len-- > 0 ) customArguments[ len ] = arguments[ len + 1 ];\n\n  var eventName = event.type;\n  var listeners = this.listeners[eventName];\n\n  if (!Array.isArray(listeners)) {\n    return false;\n  }\n\n  listeners.forEach(function (listener) {\n    if (customArguments.length > 0) {\n      listener.apply(this$1, customArguments);\n    } else {\n      listener.call(this$1, event);\n    }\n  });\n\n  return true;\n};\n\n/*\n* The network bridge is a way for the mock websocket object to 'communicate' with\n* all available servers. This is a singleton object so it is important that you\n* clean up urlMap whenever you are finished.\n*/\nvar NetworkBridge = function NetworkBridge() {\n  this.urlMap = {};\n};\n\n/*\n* Attaches a websocket object to the urlMap hash so that it can find the server\n* it is connected to and the server in turn can find it.\n*\n* @param {object} websocket - websocket object to add to the urlMap hash\n* @param {string} url\n*/\nNetworkBridge.prototype.attachWebSocket = function attachWebSocket (websocket, url) {\n  var connectionLookup = this.urlMap[url];\n\n  if (connectionLookup && connectionLookup.server && connectionLookup.websockets.indexOf(websocket) === -1) {\n    connectionLookup.websockets.push(websocket);\n    return connectionLookup.server;\n  }\n};\n\n/*\n* Attaches a websocket to a room\n*/\nNetworkBridge.prototype.addMembershipToRoom = function addMembershipToRoom (websocket, room) {\n  var connectionLookup = this.urlMap[websocket.url];\n\n  if (connectionLookup && connectionLookup.server && connectionLookup.websockets.indexOf(websocket) !== -1) {\n    if (!connectionLookup.roomMemberships[room]) {\n      connectionLookup.roomMemberships[room] = [];\n    }\n\n    connectionLookup.roomMemberships[room].push(websocket);\n  }\n};\n\n/*\n* Attaches a server object to the urlMap hash so that it can find a websockets\n* which are connected to it and so that websockets can in turn can find it.\n*\n* @param {object} server - server object to add to the urlMap hash\n* @param {string} url\n*/\nNetworkBridge.prototype.attachServer = function attachServer (server, url) {\n  var connectionLookup = this.urlMap[url];\n\n  if (!connectionLookup) {\n    this.urlMap[url] = {\n      server: server,\n      websockets: [],\n      roomMemberships: {}\n    };\n\n    return server;\n  }\n};\n\n/*\n* Finds the server which is 'running' on the given url.\n*\n* @param {string} url - the url to use to find which server is running on it\n*/\nNetworkBridge.prototype.serverLookup = function serverLookup (url) {\n  var connectionLookup = this.urlMap[url];\n\n  if (connectionLookup) {\n    return connectionLookup.server;\n  }\n};\n\n/*\n* Finds all websockets which is 'listening' on the given url.\n*\n* @param {string} url - the url to use to find all websockets which are associated with it\n* @param {string} room - if a room is provided, will only return sockets in this room\n* @param {class} broadcaster - socket that is broadcasting and is to be excluded from the lookup\n*/\nNetworkBridge.prototype.websocketsLookup = function websocketsLookup (url, room, broadcaster) {\n  var websockets;\n  var connectionLookup = this.urlMap[url];\n\n  websockets = connectionLookup ? connectionLookup.websockets : [];\n\n  if (room) {\n    var members = connectionLookup.roomMemberships[room];\n    websockets = members || [];\n  }\n\n  return broadcaster ? websockets.filter(function (websocket) { return websocket !== broadcaster; }) : websockets;\n};\n\n/*\n* Removes the entry associated with the url.\n*\n* @param {string} url\n*/\nNetworkBridge.prototype.removeServer = function removeServer (url) {\n  delete this.urlMap[url];\n};\n\n/*\n* Removes the individual websocket from the map of associated websockets.\n*\n* @param {object} websocket - websocket object to remove from the url map\n* @param {string} url\n*/\nNetworkBridge.prototype.removeWebSocket = function removeWebSocket (websocket, url) {\n  var connectionLookup = this.urlMap[url];\n\n  if (connectionLookup) {\n    connectionLookup.websockets = reject(connectionLookup.websockets, function (socket) { return socket === websocket; });\n  }\n};\n\n/*\n* Removes a websocket from a room\n*/\nNetworkBridge.prototype.removeMembershipFromRoom = function removeMembershipFromRoom (websocket, room) {\n  var connectionLookup = this.urlMap[websocket.url];\n  var memberships = connectionLookup.roomMemberships[room];\n\n  if (connectionLookup && memberships !== null) {\n    connectionLookup.roomMemberships[room] = reject(memberships, function (socket) { return socket === websocket; });\n  }\n};\n\nvar networkBridge = new NetworkBridge(); // Note: this is a singleton\n\n/*\n* https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n*/\nvar codes = {\n  CLOSE_NORMAL: 1000,\n  CLOSE_GOING_AWAY: 1001,\n  CLOSE_PROTOCOL_ERROR: 1002,\n  CLOSE_UNSUPPORTED: 1003,\n  CLOSE_NO_STATUS: 1005,\n  CLOSE_ABNORMAL: 1006,\n  CLOSE_TOO_LARGE: 1009\n};\n\nfunction normalizeUrl(url) {\n  var parts = url.split('://');\n  return parts[1] && parts[1].indexOf('/') === -1 ? (url + \"/\") : url;\n}\n\nfunction log(method, message) {\n  /* eslint-disable no-console */\n  if (typeof process !== 'undefined' && \"development\" !== 'test') {\n    console[method].call(null, message);\n  }\n  /* eslint-enable no-console */\n}\n\nvar EventPrototype = function EventPrototype () {};\n\nEventPrototype.prototype.stopPropagation = function stopPropagation () {};\nEventPrototype.prototype.stopImmediatePropagation = function stopImmediatePropagation () {};\n\n// if no arguments are passed then the type is set to \"undefined\" on\n// chrome and safari.\nEventPrototype.prototype.initEvent = function initEvent (type, bubbles, cancelable) {\n    if ( type === void 0 ) type = 'undefined';\n    if ( bubbles === void 0 ) bubbles = false;\n    if ( cancelable === void 0 ) cancelable = false;\n\n  this.type = String(type);\n  this.bubbles = Boolean(bubbles);\n  this.cancelable = Boolean(cancelable);\n};\n\nvar Event = (function (EventPrototype$$1) {\n  function Event(type, eventInitConfig) {\n    if ( eventInitConfig === void 0 ) eventInitConfig = {};\n\n    EventPrototype$$1.call(this);\n\n    if (!type) {\n      throw new TypeError(\"Failed to construct 'Event': 1 argument required, but only 0 present.\");\n    }\n\n    if (typeof eventInitConfig !== 'object') {\n      throw new TypeError(\"Failed to construct 'Event': parameter 2 ('eventInitDict') is not an object\");\n    }\n\n    var bubbles = eventInitConfig.bubbles;\n    var cancelable = eventInitConfig.cancelable;\n\n    this.type = String(type);\n    this.timeStamp = Date.now();\n    this.target = null;\n    this.srcElement = null;\n    this.returnValue = true;\n    this.isTrusted = false;\n    this.eventPhase = 0;\n    this.defaultPrevented = false;\n    this.currentTarget = null;\n    this.cancelable = cancelable ? Boolean(cancelable) : false;\n    this.canncelBubble = false;\n    this.bubbles = bubbles ? Boolean(bubbles) : false;\n  }\n\n  if ( EventPrototype$$1 ) Event.__proto__ = EventPrototype$$1;\n  Event.prototype = Object.create( EventPrototype$$1 && EventPrototype$$1.prototype );\n  Event.prototype.constructor = Event;\n\n  return Event;\n}(EventPrototype));\n\nvar MessageEvent = (function (EventPrototype$$1) {\n  function MessageEvent(type, eventInitConfig) {\n    if ( eventInitConfig === void 0 ) eventInitConfig = {};\n\n    EventPrototype$$1.call(this);\n\n    if (!type) {\n      throw new TypeError(\"Failed to construct 'MessageEvent': 1 argument required, but only 0 present.\");\n    }\n\n    if (typeof eventInitConfig !== 'object') {\n      throw new TypeError(\"Failed to construct 'MessageEvent': parameter 2 ('eventInitDict') is not an object\");\n    }\n\n    var bubbles = eventInitConfig.bubbles;\n    var cancelable = eventInitConfig.cancelable;\n    var data = eventInitConfig.data;\n    var origin = eventInitConfig.origin;\n    var lastEventId = eventInitConfig.lastEventId;\n    var ports = eventInitConfig.ports;\n\n    this.type = String(type);\n    this.timeStamp = Date.now();\n    this.target = null;\n    this.srcElement = null;\n    this.returnValue = true;\n    this.isTrusted = false;\n    this.eventPhase = 0;\n    this.defaultPrevented = false;\n    this.currentTarget = null;\n    this.cancelable = cancelable ? Boolean(cancelable) : false;\n    this.canncelBubble = false;\n    this.bubbles = bubbles ? Boolean(bubbles) : false;\n    this.origin = origin ? String(origin) : '';\n    this.ports = typeof ports === 'undefined' ? null : ports;\n    this.data = typeof data === 'undefined' ? null : data;\n    this.lastEventId = lastEventId ? String(lastEventId) : '';\n  }\n\n  if ( EventPrototype$$1 ) MessageEvent.__proto__ = EventPrototype$$1;\n  MessageEvent.prototype = Object.create( EventPrototype$$1 && EventPrototype$$1.prototype );\n  MessageEvent.prototype.constructor = MessageEvent;\n\n  return MessageEvent;\n}(EventPrototype));\n\nvar CloseEvent = (function (EventPrototype$$1) {\n  function CloseEvent(type, eventInitConfig) {\n    if ( eventInitConfig === void 0 ) eventInitConfig = {};\n\n    EventPrototype$$1.call(this);\n\n    if (!type) {\n      throw new TypeError(\"Failed to construct 'CloseEvent': 1 argument required, but only 0 present.\");\n    }\n\n    if (typeof eventInitConfig !== 'object') {\n      throw new TypeError(\"Failed to construct 'CloseEvent': parameter 2 ('eventInitDict') is not an object\");\n    }\n\n    var bubbles = eventInitConfig.bubbles;\n    var cancelable = eventInitConfig.cancelable;\n    var code = eventInitConfig.code;\n    var reason = eventInitConfig.reason;\n    var wasClean = eventInitConfig.wasClean;\n\n    this.type = String(type);\n    this.timeStamp = Date.now();\n    this.target = null;\n    this.srcElement = null;\n    this.returnValue = true;\n    this.isTrusted = false;\n    this.eventPhase = 0;\n    this.defaultPrevented = false;\n    this.currentTarget = null;\n    this.cancelable = cancelable ? Boolean(cancelable) : false;\n    this.canncelBubble = false;\n    this.bubbles = bubbles ? Boolean(bubbles) : false;\n    this.code = typeof code === 'number' ? Number(code) : 0;\n    this.reason = reason ? String(reason) : '';\n    this.wasClean = wasClean ? Boolean(wasClean) : false;\n  }\n\n  if ( EventPrototype$$1 ) CloseEvent.__proto__ = EventPrototype$$1;\n  CloseEvent.prototype = Object.create( EventPrototype$$1 && EventPrototype$$1.prototype );\n  CloseEvent.prototype.constructor = CloseEvent;\n\n  return CloseEvent;\n}(EventPrototype));\n\n/*\n* Creates an Event object and extends it to allow full modification of\n* its properties.\n*\n* @param {object} config - within config you will need to pass type and optionally target\n*/\nfunction createEvent(config) {\n  var type = config.type;\n  var target = config.target;\n  var eventObject = new Event(type);\n\n  if (target) {\n    eventObject.target = target;\n    eventObject.srcElement = target;\n    eventObject.currentTarget = target;\n  }\n\n  return eventObject;\n}\n\n/*\n* Creates a MessageEvent object and extends it to allow full modification of\n* its properties.\n*\n* @param {object} config - within config: type, origin, data and optionally target\n*/\nfunction createMessageEvent(config) {\n  var type = config.type;\n  var origin = config.origin;\n  var data = config.data;\n  var target = config.target;\n  var messageEvent = new MessageEvent(type, {\n    data: data,\n    origin: origin\n  });\n\n  if (target) {\n    messageEvent.target = target;\n    messageEvent.srcElement = target;\n    messageEvent.currentTarget = target;\n  }\n\n  return messageEvent;\n}\n\n/*\n* Creates a CloseEvent object and extends it to allow full modification of\n* its properties.\n*\n* @param {object} config - within config: type and optionally target, code, and reason\n*/\nfunction createCloseEvent(config) {\n  var code = config.code;\n  var reason = config.reason;\n  var type = config.type;\n  var target = config.target;\n  var wasClean = config.wasClean;\n\n  if (!wasClean) {\n    wasClean = code === 1000;\n  }\n\n  var closeEvent = new CloseEvent(type, {\n    code: code,\n    reason: reason,\n    wasClean: wasClean\n  });\n\n  if (target) {\n    closeEvent.target = target;\n    closeEvent.srcElement = target;\n    closeEvent.currentTarget = target;\n  }\n\n  return closeEvent;\n}\n\n/*\n* The main websocket class which is designed to mimick the native WebSocket class as close\n* as possible.\n*\n* https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n*/\nvar WebSocket$1 = (function (EventTarget$$1) {\n  function WebSocket(url, protocol) {\n    if ( protocol === void 0 ) protocol = '';\n\n    EventTarget$$1.call(this);\n\n    if (!url) {\n      throw new TypeError(\"Failed to construct 'WebSocket': 1 argument required, but only 0 present.\");\n    }\n\n    this.binaryType = 'blob';\n    this.url = normalizeUrl(url);\n    this.readyState = WebSocket.CONNECTING;\n    this.protocol = '';\n\n    if (typeof protocol === 'string') {\n      this.protocol = protocol;\n    } else if (Array.isArray(protocol) && protocol.length > 0) {\n      this.protocol = protocol[0];\n    }\n\n    /*\n    * In order to capture the callback function we need to define custom setters.\n    * To illustrate:\n    *   mySocket.onopen = function() { alert(true) };\n    *\n    * The only way to capture that function and hold onto it for later is with the\n    * below code:\n    */\n    Object.defineProperties(this, {\n      onopen: {\n        configurable: true,\n        enumerable: true,\n        get: function get() {\n          return this.listeners.open;\n        },\n        set: function set(listener) {\n          this.addEventListener('open', listener);\n        }\n      },\n      onmessage: {\n        configurable: true,\n        enumerable: true,\n        get: function get() {\n          return this.listeners.message;\n        },\n        set: function set(listener) {\n          this.addEventListener('message', listener);\n        }\n      },\n      onclose: {\n        configurable: true,\n        enumerable: true,\n        get: function get() {\n          return this.listeners.close;\n        },\n        set: function set(listener) {\n          this.addEventListener('close', listener);\n        }\n      },\n      onerror: {\n        configurable: true,\n        enumerable: true,\n        get: function get() {\n          return this.listeners.error;\n        },\n        set: function set(listener) {\n          this.addEventListener('error', listener);\n        }\n      }\n    });\n\n    var server = networkBridge.attachWebSocket(this, this.url);\n\n    /*\n    * This delay is needed so that we dont trigger an event before the callbacks have been\n    * setup. For example:\n    *\n    * var socket = new WebSocket('ws://localhost');\n    *\n    * // If we dont have the delay then the event would be triggered right here and this is\n    * // before the onopen had a chance to register itself.\n    *\n    * socket.onopen = () => { // this would never be called };\n    *\n    * // and with the delay the event gets triggered here after all of the callbacks have been\n    * // registered :-)\n    */\n    delay(function delayCallback() {\n      if (server) {\n        if (\n          server.options.verifyClient &&\n          typeof server.options.verifyClient === 'function' &&\n          !server.options.verifyClient()\n        ) {\n          this.readyState = WebSocket.CLOSED;\n\n          log(\n            'error',\n            (\"WebSocket connection to '\" + (this.url) + \"' failed: HTTP Authentication failed; no valid credentials available\")\n          );\n\n          networkBridge.removeWebSocket(this, this.url);\n          this.dispatchEvent(createEvent({ type: 'error', target: this }));\n          this.dispatchEvent(createCloseEvent({ type: 'close', target: this, code: codes.CLOSE_NORMAL }));\n        } else {\n          this.readyState = WebSocket.OPEN;\n          this.dispatchEvent(createEvent({ type: 'open', target: this }));\n          server.dispatchEvent(createEvent({ type: 'connection' }), server, this);\n        }\n      } else {\n        this.readyState = WebSocket.CLOSED;\n        this.dispatchEvent(createEvent({ type: 'error', target: this }));\n        this.dispatchEvent(createCloseEvent({ type: 'close', target: this, code: codes.CLOSE_NORMAL }));\n\n        log('error', (\"WebSocket connection to '\" + (this.url) + \"' failed\"));\n      }\n    }, this);\n  }\n\n  if ( EventTarget$$1 ) WebSocket.__proto__ = EventTarget$$1;\n  WebSocket.prototype = Object.create( EventTarget$$1 && EventTarget$$1.prototype );\n  WebSocket.prototype.constructor = WebSocket;\n\n  /*\n  * Transmits data to the server over the WebSocket connection.\n  *\n  * https://developer.mozilla.org/en-US/docs/Web/API/WebSocket#send()\n  */\n  WebSocket.prototype.send = function send (data) {\n    if (this.readyState === WebSocket.CLOSING || this.readyState === WebSocket.CLOSED) {\n      throw new Error('WebSocket is already in CLOSING or CLOSED state');\n    }\n\n    var messageEvent = createMessageEvent({\n      type: 'message',\n      origin: this.url,\n      data: data\n    });\n\n    var server = networkBridge.serverLookup(this.url);\n\n    if (server) {\n      delay(function () {\n        server.dispatchEvent(messageEvent, data);\n      }, server);\n    }\n  };\n\n  /*\n  * Closes the WebSocket connection or connection attempt, if any.\n  * If the connection is already CLOSED, this method does nothing.\n  *\n  * https://developer.mozilla.org/en-US/docs/Web/API/WebSocket#close()\n  */\n  WebSocket.prototype.close = function close () {\n    if (this.readyState !== WebSocket.OPEN) {\n      return undefined;\n    }\n\n    var server = networkBridge.serverLookup(this.url);\n    var closeEvent = createCloseEvent({\n      type: 'close',\n      target: this,\n      code: codes.CLOSE_NORMAL\n    });\n\n    networkBridge.removeWebSocket(this, this.url);\n\n    this.readyState = WebSocket.CLOSED;\n    this.dispatchEvent(closeEvent);\n\n    if (server) {\n      server.dispatchEvent(closeEvent, server);\n    }\n  };\n\n  return WebSocket;\n}(EventTarget));\n\nWebSocket$1.CONNECTING = 0;\nWebSocket$1.OPEN = 1;\nWebSocket$1.CLOSING = 2;\nWebSocket$1.CLOSED = 3;\n\nfunction retrieveGlobalObject() {\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  return typeof process === 'object' && \"function\" === 'function' && typeof global === 'object' ? global : this;\n}\n\nvar dedupe = function (arr) { return arr.reduce(function (deduped, b) {\n    if (deduped.indexOf(b) > -1) { return deduped; }\n    return deduped.concat(b);\n  }, []); };\n\n/*\n* https://github.com/websockets/ws#server-example\n*/\nvar Server$1 = (function (EventTarget$$1) {\n  function Server(url, options) {\n    if ( options === void 0 ) options = {};\n\n    EventTarget$$1.call(this);\n    this.url = normalizeUrl(url);\n    this.originalWebSocket = null;\n    var server = networkBridge.attachServer(this, this.url);\n\n    if (!server) {\n      this.dispatchEvent(createEvent({ type: 'error' }));\n      throw new Error('A mock server is already listening on this url');\n    }\n\n    if (typeof options.verifyClient === 'undefined') {\n      options.verifyClient = null;\n    }\n\n    this.options = options;\n\n    this.start();\n  }\n\n  if ( EventTarget$$1 ) Server.__proto__ = EventTarget$$1;\n  Server.prototype = Object.create( EventTarget$$1 && EventTarget$$1.prototype );\n  Server.prototype.constructor = Server;\n\n  /*\n  * Attaches the mock websocket object to the global object\n  */\n  Server.prototype.start = function start () {\n    var globalObj = retrieveGlobalObject();\n\n    if (globalObj.WebSocket) {\n      this.originalWebSocket = globalObj.WebSocket;\n    }\n\n    globalObj.WebSocket = WebSocket$1;\n  };\n\n  /*\n  * Removes the mock websocket object from the global object\n  */\n  Server.prototype.stop = function stop (callback) {\n    if ( callback === void 0 ) callback = function () {};\n\n    var globalObj = retrieveGlobalObject();\n\n    if (this.originalWebSocket) {\n      globalObj.WebSocket = this.originalWebSocket;\n    } else {\n      delete globalObj.WebSocket;\n    }\n\n    this.originalWebSocket = null;\n\n    networkBridge.removeServer(this.url);\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n  };\n\n  /*\n  * This is the main function for the mock server to subscribe to the on events.\n  *\n  * ie: mockServer.on('connection', function() { console.log('a mock client connected'); });\n  *\n  * @param {string} type - The event key to subscribe to. Valid keys are: connection, message, and close.\n  * @param {function} callback - The callback which should be called when a certain event is fired.\n  */\n  Server.prototype.on = function on (type, callback) {\n    this.addEventListener(type, callback);\n  };\n\n  /*\n  * This send function will notify all mock clients via their onmessage callbacks that the server\n  * has a message for them.\n  *\n  * @param {*} data - Any javascript object which will be crafted into a MessageObject.\n  */\n  Server.prototype.send = function send (data, options) {\n    if ( options === void 0 ) options = {};\n\n    this.emit('message', data, options);\n  };\n\n  /*\n  * Sends a generic message event to all mock clients.\n  */\n  Server.prototype.emit = function emit (event, data, options) {\n    var this$1 = this;\n    if ( options === void 0 ) options = {};\n\n    var websockets = options.websockets;\n\n    if (!websockets) {\n      websockets = networkBridge.websocketsLookup(this.url);\n    }\n\n    if (typeof options !== 'object' || arguments.length > 3) {\n      data = Array.prototype.slice.call(arguments, 1, arguments.length);\n    }\n\n    websockets.forEach(function (socket) {\n      if (Array.isArray(data)) {\n        socket.dispatchEvent.apply(\n          socket, [ createMessageEvent({\n            type: event,\n            data: data,\n            origin: this$1.url,\n            target: socket\n          }) ].concat( data )\n        );\n      } else {\n        socket.dispatchEvent(\n          createMessageEvent({\n            type: event,\n            data: data,\n            origin: this$1.url,\n            target: socket\n          })\n        );\n      }\n    });\n  };\n\n  /*\n  * Closes the connection and triggers the onclose method of all listening\n  * websockets. After that it removes itself from the urlMap so another server\n  * could add itself to the url.\n  *\n  * @param {object} options\n  */\n  Server.prototype.close = function close (options) {\n    if ( options === void 0 ) options = {};\n\n    var code = options.code;\n    var reason = options.reason;\n    var wasClean = options.wasClean;\n    var listeners = networkBridge.websocketsLookup(this.url);\n\n    // Remove server before notifications to prevent immediate reconnects from\n    // socket onclose handlers\n    networkBridge.removeServer(this.url);\n\n    listeners.forEach(function (socket) {\n      socket.readyState = WebSocket$1.CLOSE;\n      socket.dispatchEvent(\n        createCloseEvent({\n          type: 'close',\n          target: socket,\n          code: code || codes.CLOSE_NORMAL,\n          reason: reason || '',\n          wasClean: wasClean\n        })\n      );\n    });\n\n    this.dispatchEvent(createCloseEvent({ type: 'close' }), this);\n  };\n\n  /*\n  * Returns an array of websockets which are listening to this server\n  */\n  Server.prototype.clients = function clients () {\n    return networkBridge.websocketsLookup(this.url);\n  };\n\n  /*\n  * Prepares a method to submit an event to members of the room\n  *\n  * e.g. server.to('my-room').emit('hi!');\n  */\n  Server.prototype.to = function to (room, broadcaster, broadcastList) {\n    var this$1 = this;\n    if ( broadcastList === void 0 ) broadcastList = [];\n\n    var self = this;\n    var websockets = dedupe(broadcastList.concat(networkBridge.websocketsLookup(this.url, room, broadcaster)));\n\n    return {\n      to: function (chainedRoom, chainedBroadcaster) { return this$1.to.call(this$1, chainedRoom, chainedBroadcaster, websockets); },\n      emit: function emit(event, data) {\n        self.emit(event, data, { websockets: websockets });\n      }\n    };\n  };\n\n  /*\n   * Alias for Server.to\n   */\n  Server.prototype.in = function in$1 () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    return this.to.apply(null, args);\n  };\n\n  /*\n   * Simulate an event from the server to the clients. Useful for\n   * simulating errors.\n   */\n  Server.prototype.simulate = function simulate (event) {\n    var listeners = networkBridge.websocketsLookup(this.url);\n\n    if (event === 'error') {\n      listeners.forEach(function (socket) {\n        socket.readyState = WebSocket$1.CLOSE;\n        socket.dispatchEvent(createEvent({ type: 'error' }));\n      });\n    }\n  };\n\n  return Server;\n}(EventTarget));\n\n/*\n * Alternative constructor to support namespaces in socket.io\n *\n * http://socket.io/docs/rooms-and-namespaces/#custom-namespaces\n */\nServer$1.of = function of(url) {\n  return new Server$1(url);\n};\n\n/*\n* The socket-io class is designed to mimick the real API as closely as possible.\n*\n* http://socket.io/docs/\n*/\nvar SocketIO$1 = (function (EventTarget$$1) {\n  function SocketIO(url, protocol) {\n    var this$1 = this;\n    if ( url === void 0 ) url = 'socket.io';\n    if ( protocol === void 0 ) protocol = '';\n\n    EventTarget$$1.call(this);\n\n    this.binaryType = 'blob';\n    this.url = normalizeUrl(url);\n    this.readyState = SocketIO.CONNECTING;\n    this.protocol = '';\n\n    if (typeof protocol === 'string') {\n      this.protocol = protocol;\n    } else if (Array.isArray(protocol) && protocol.length > 0) {\n      this.protocol = protocol[0];\n    }\n\n    var server = networkBridge.attachWebSocket(this, this.url);\n\n    /*\n    * Delay triggering the connection events so they can be defined in time.\n    */\n    delay(function delayCallback() {\n      if (server) {\n        this.readyState = SocketIO.OPEN;\n        server.dispatchEvent(createEvent({ type: 'connection' }), server, this);\n        server.dispatchEvent(createEvent({ type: 'connect' }), server, this); // alias\n        this.dispatchEvent(createEvent({ type: 'connect', target: this }));\n      } else {\n        this.readyState = SocketIO.CLOSED;\n        this.dispatchEvent(createEvent({ type: 'error', target: this }));\n        this.dispatchEvent(\n          createCloseEvent({\n            type: 'close',\n            target: this,\n            code: codes.CLOSE_NORMAL\n          })\n        );\n\n        log('error', (\"Socket.io connection to '\" + (this.url) + \"' failed\"));\n      }\n    }, this);\n\n    /**\n      Add an aliased event listener for close / disconnect\n     */\n    this.addEventListener('close', function (event) {\n      this$1.dispatchEvent(\n        createCloseEvent({\n          type: 'disconnect',\n          target: event.target,\n          code: event.code\n        })\n      );\n    });\n  }\n\n  if ( EventTarget$$1 ) SocketIO.__proto__ = EventTarget$$1;\n  SocketIO.prototype = Object.create( EventTarget$$1 && EventTarget$$1.prototype );\n  SocketIO.prototype.constructor = SocketIO;\n\n  var prototypeAccessors = { broadcast: {} };\n\n  /*\n  * Closes the SocketIO connection or connection attempt, if any.\n  * If the connection is already CLOSED, this method does nothing.\n  */\n  SocketIO.prototype.close = function close () {\n    if (this.readyState !== SocketIO.OPEN) {\n      return undefined;\n    }\n\n    var server = networkBridge.serverLookup(this.url);\n    networkBridge.removeWebSocket(this, this.url);\n\n    this.readyState = SocketIO.CLOSED;\n    this.dispatchEvent(\n      createCloseEvent({\n        type: 'close',\n        target: this,\n        code: codes.CLOSE_NORMAL\n      })\n    );\n\n    if (server) {\n      server.dispatchEvent(\n        createCloseEvent({\n          type: 'disconnect',\n          target: this,\n          code: codes.CLOSE_NORMAL\n        }),\n        server\n      );\n    }\n  };\n\n  /*\n  * Alias for Socket#close\n  *\n  * https://github.com/socketio/socket.io-client/blob/master/lib/socket.js#L383\n  */\n  SocketIO.prototype.disconnect = function disconnect () {\n    this.close();\n  };\n\n  /*\n  * Submits an event to the server with a payload\n  */\n  SocketIO.prototype.emit = function emit (event) {\n    var data = [], len = arguments.length - 1;\n    while ( len-- > 0 ) data[ len ] = arguments[ len + 1 ];\n\n    if (this.readyState !== SocketIO.OPEN) {\n      throw new Error('SocketIO is already in CLOSING or CLOSED state');\n    }\n\n    var messageEvent = createMessageEvent({\n      type: event,\n      origin: this.url,\n      data: data\n    });\n\n    var server = networkBridge.serverLookup(this.url);\n\n    if (server) {\n      server.dispatchEvent.apply(server, [ messageEvent ].concat( data ));\n    }\n  };\n\n  /*\n  * Submits a 'message' event to the server.\n  *\n  * Should behave exactly like WebSocket#send\n  *\n  * https://github.com/socketio/socket.io-client/blob/master/lib/socket.js#L113\n  */\n  SocketIO.prototype.send = function send (data) {\n    this.emit('message', data);\n  };\n\n  /*\n  * For broadcasting events to other connected sockets.\n  *\n  * e.g. socket.broadcast.emit('hi!');\n  * e.g. socket.broadcast.to('my-room').emit('hi!');\n  */\n  prototypeAccessors.broadcast.get = function () {\n    if (this.readyState !== SocketIO.OPEN) {\n      throw new Error('SocketIO is already in CLOSING or CLOSED state');\n    }\n\n    var self = this;\n    var server = networkBridge.serverLookup(this.url);\n    if (!server) {\n      throw new Error((\"SocketIO can not find a server at the specified URL (\" + (this.url) + \")\"));\n    }\n\n    return {\n      emit: function emit(event, data) {\n        server.emit(event, data, { websockets: networkBridge.websocketsLookup(self.url, null, self) });\n      },\n      to: function to(room) {\n        return server.to(room, self);\n      },\n      in: function in$1(room) {\n        return server.in(room, self);\n      }\n    };\n  };\n\n  /*\n  * For registering events to be received from the server\n  */\n  SocketIO.prototype.on = function on (type, callback) {\n    this.addEventListener(type, callback);\n  };\n\n  /*\n   * Remove event listener\n   *\n   * https://socket.io/docs/client-api/#socket-on-eventname-callback\n   */\n  SocketIO.prototype.off = function off (type) {\n    this.removeEventListener(type);\n  };\n\n  /*\n   * Join a room on a server\n   *\n   * http://socket.io/docs/rooms-and-namespaces/#joining-and-leaving\n   */\n  SocketIO.prototype.join = function join (room) {\n    networkBridge.addMembershipToRoom(this, room);\n  };\n\n  /*\n   * Get the websocket to leave the room\n   *\n   * http://socket.io/docs/rooms-and-namespaces/#joining-and-leaving\n   */\n  SocketIO.prototype.leave = function leave (room) {\n    networkBridge.removeMembershipFromRoom(this, room);\n  };\n\n  SocketIO.prototype.to = function to (room) {\n    return this.broadcast.to(room);\n  };\n\n  SocketIO.prototype.in = function in$1 () {\n    return this.to.apply(null, arguments);\n  };\n\n  /*\n   * Invokes all listener functions that are listening to the given event.type property. Each\n   * listener will be passed the event as the first argument.\n   *\n   * @param {object} event - event object which will be passed to all listeners of the event.type property\n   */\n  SocketIO.prototype.dispatchEvent = function dispatchEvent (event) {\n    var this$1 = this;\n    var customArguments = [], len = arguments.length - 1;\n    while ( len-- > 0 ) customArguments[ len ] = arguments[ len + 1 ];\n\n    var eventName = event.type;\n    var listeners = this.listeners[eventName];\n\n    if (!Array.isArray(listeners)) {\n      return false;\n    }\n\n    listeners.forEach(function (listener) {\n      if (customArguments.length > 0) {\n        listener.apply(this$1, customArguments);\n      } else {\n        // Regular WebSockets expect a MessageEvent but Socketio.io just wants raw data\n        //  payload instanceof MessageEvent works, but you can't isntance of NodeEvent\n        //  for now we detect if the output has data defined on it\n        listener.call(this$1, event.data ? event.data : event);\n      }\n    });\n  };\n\n  Object.defineProperties( SocketIO.prototype, prototypeAccessors );\n\n  return SocketIO;\n}(EventTarget));\n\nSocketIO$1.CONNECTING = 0;\nSocketIO$1.OPEN = 1;\nSocketIO$1.CLOSING = 2;\nSocketIO$1.CLOSED = 3;\n\n/*\n* Static constructor methods for the IO Socket\n*/\nvar IO = function ioConstructor(url) {\n  return new SocketIO$1(url);\n};\n\n/*\n* Alias the raw IO() constructor\n*/\nIO.connect = function ioConnect(url) {\n  /* eslint-disable new-cap */\n  return IO(url);\n  /* eslint-enable new-cap */\n};\n\nvar Server = Server$1;\nvar WebSocket = WebSocket$1;\nvar SocketIO = IO;\n\nexports.Server = Server;\nexports.WebSocket = WebSocket;\nexports.SocketIO = SocketIO;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n\n//# sourceURL=webpack:///./node_modules/mock-socket/dist/mock-socket.js?");

/***/ }),

/***/ "./src/server/Display.js":
/*!*******************************!*\
  !*** ./src/server/Display.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function Display(ws, game) {\n  this.ws = ws;\n  this.game = game;\n\n  ws.on('close', () => {\n    ws.isClosed = true;\n    console.log('DISPLAY CLOSED');\n  });\n\n  this.delFromGame = function () {\n    game.delDisplay(this);\n  };\n\n  this.addToGame = function () {\n    this.game.addDisplay(this);\n  };\n\n  this.renderWinner = function (colorIndex) {\n    if (ws.isClosed) return;\n\n    this.ws.send(JSON.stringify({ type: 'GOT_WINNER', colorIndex: colorIndex }));\n  };\n\n  this.close = function () {\n    if (ws.isClosed) return;\n\n    this.ws.send(JSON.stringify({ type: 'GAME_DELETE' }));\n  };\n\n  this.delPlayer = function (id) {\n    if (ws.isClosed) return;\n\n    this.ws.send(JSON.stringify({ type: 'DELETE_PLAYER', id: id }));\n  };\n\n  this.killPlayer = function (id) {\n    if (ws.isClosed) return;\n    this.ws.send(JSON.stringify({ type: 'KILL_PLAYER', id: id }));\n  };\n\n  this.sendCoords = function (coords) {\n    if (ws.isClosed) return;\n    this.ws.send(JSON.stringify({ type: 'C', coords: coords.join('.') }));\n  };\n\n  this.sendPlayer = function (player) {\n    let obj = {\n      x: player.x,\n      y: player.y,\n      colorIndex: player.colorIndex,\n      id: player.id\n    };\n    console.log(obj);\n    this.ws.send(JSON.stringify({ type: 'ADD_PLAYER', player: obj }));\n  };\n}\n\nmodule.exports = Display;\n\n//# sourceURL=webpack:///./src/server/Display.js?");

/***/ }),

/***/ "./src/server/Game.js":
/*!****************************!*\
  !*** ./src/server/Game.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function Game(code, mode, type, games) {\n  this.mode = mode;\n  this.code = code;\n  this.type = type;\n  this.master = null;\n  this.id = null;\n  this.state = 'wait';\n  this.freePlayerSpaces = 4;\n  this.freeDisplaySpaces = 4;\n  this.fieldW = 870;\n  this.fieldH = 640;\n  this.players = [];\n  this.displays = [];\n  this.games = games;\n\n  this.addPlayer = function (player) {\n    for (let i = 0; i < 4; i++) {\n      if (!this.players[i]) {\n        this.players[i] = player;\n        player.id = i;\n        this.freePlayerSpaces--;\n        return i;\n      }\n    }\n    return null;\n  };\n\n  this.delPlayer = function (player) {\n    let id = player.id;\n\n    if (id === null) return;\n\n    delete this.players[id];\n    this.freePlayerSpaces++;\n\n    this.displays.forEach(display => {\n      display.delPlayer(id);\n    });\n\n    this.checkGameOver();\n  };\n\n  this.sendPlayer = function (player) {\n    this.displays.forEach(display => {\n      display.sendPlayer(player);\n    });\n  };\n\n  this.addDisplay = function (display) {\n    for (let i = 0; i < 4; i++) {\n      if (!this.displays[i]) {\n        this.displays[i] = display;\n        display.id = i;\n        this.freeDisplaySpaces--;\n        return i;\n      }\n    }\n    return null;\n  };\n\n  this.delDisplay = function (display) {\n    let id = player.id;\n\n    if (!id) return;\n\n    delete this.displays[id];\n    this.freeDisplaySpaces++;\n  };\n\n  this.startGame = function () {\n    console.log('Game starting...', this.players.length);\n    this.players.forEach(player => {\n      if (!player) return;\n\n      player.setInitialCoords();\n      player.isKilled = false;\n      player.startGame();\n    });\n    this.sendCoords();\n  };\n\n  this.getAllCoords = function () {\n    let coords = [];\n    this.players.forEach(player => {\n      if (!player) {\n        coords.push(undefined);\n        coords.push(undefined);\n        return;\n      }\n      coords.push(player.x);\n      coords.push(player.y);\n    });\n    return coords;\n  };\n\n  this.sendCoords = function () {\n    let coords = this.getAllCoords();\n    console.log(coords);\n    this.displays.forEach(display => {\n      display.sendCoords(coords);\n    });\n  };\n\n  this.setPlayerKilled = function (player) {\n    let id = player.id;\n\n    if (id === null) return;\n\n    this.displays.forEach(display => {\n      display.killPlayer(id);\n    });\n\n    this.checkGameOver();\n  };\n\n  this.getKilledPlayers = function () {\n    let counter = 0;\n\n    this.players.forEach(player => {\n      if (!player) return;\n\n      if (player.isKilled) {\n        counter++;\n      }\n    });\n    return counter;\n  };\n\n  this.getPlayersNum = function () {\n    let counter = 0;\n    this.players.forEach(player => {\n      if (player) counter++;\n    });\n    return counter;\n  };\n\n  this.checkGameOver = function () {\n    if (this.getKilledPlayers() === this.getPlayersNum() - 1) {\n      //this.players.length - 1\n      let player = this.getLastPlayer();\n      if (!player) return;\n      this.renderWinner(player);\n      player.setWinner();\n      this.stopGame();\n    }\n  };\n\n  this.getLastPlayer = function () {\n    let lastPlayer = null;\n    this.players.forEach(player => {\n      if (!player) return;\n\n      if (!player.isKilled) lastPlayer = player;\n    });\n\n    return lastPlayer;\n  };\n\n  this.renderWinner = function (player) {\n    this.displays.forEach(display => {\n      display.renderWinner(player.colorIndex);\n    });\n  };\n\n  this.clearIdlePlayers = function () {\n    this.players.forEach(player => {\n      if (!player) return;\n\n      if (!player.wantAgain) {\n        player.delFromGame();\n      }\n    });\n  };\n\n  this.stopGame = function () {\n    this.players.forEach(player => {\n      clearInterval(player.interval);\n    });\n  };\n\n  this.playAgain = function () {\n    this.clearIdlePlayers();\n\n    if (this.getPlayersNum() < 2) {\n      this.del();\n      return;\n    }\n\n    this.startGame();\n  };\n\n  this.del = function () {\n    this.players.forEach(player => {\n      if (!player) return;\n      player.delGame();\n    });\n    this.displays.forEach(display => {\n      if (!display) return;\n      display.close();\n    });\n\n    delete this.games[this.id];\n  };\n}\n\nmodule.exports = Game;\n\n//# sourceURL=webpack:///./src/server/Game.js?");

/***/ }),

/***/ "./src/server/Player.js":
/*!******************************!*\
  !*** ./src/server/Player.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function Player(ws, game, customColor) {\n\n  this.game = game;\n  this.isKilled = false;\n  this.id = null;\n  this.interval = null;\n  this.ws = ws;\n  this.currVector = null;\n  this.wantAgain = null;\n  this.MOVE_SPEED = 30;\n  this.MOVE_WIDTH = 10;\n\n  this.size = 80 - 1;\n\n  this.setDeath = function () {\n    this.ws.send(JSON.stringify({ type: 'GAME_OVER' }));\n\n    clearInterval(this.interval);\n\n    this.isKilled = true;\n    this.wantAgain = false;\n\n    this.game.setPlayerKilled(this);\n  };\n\n  this.sendColor = function () {\n    this.ws.send(JSON.stringify({ type: 'SET_COLOR', colorIndex: this.colorIndex }));\n  };\n\n  this.setWinner = function () {\n    this.wantAgain = false;\n    this.ws.send(JSON.stringify({ type: 'WINNER' }));\n  };\n\n  this.startGame = function () {\n    this.ws.send(JSON.stringify({ type: 'START_GAME' }));\n  };\n\n  this.delFromGame = function () {\n    this.game.delPlayer(this);\n\n    if (this.ws.isClosed) return;\n\n    this.ws.send(JSON.stringify({ type: 'START_SCREEN' }));\n  };\n\n  this.delGame = function () {\n    if (this.ws.isClosed) return;\n\n    this.ws.send(JSON.stringify({ type: 'START_SCREEN' }));\n  };\n\n  this.addToGame = function () {\n    this.game.addPlayer(this);\n  };\n\n  this.push = function (num, vector = null) {\n    let vect = this.vector;\n\n    if (vector) vect = vector;\n\n    if (!vect) return;\n\n    switch (vect) {\n      case 'up':\n        this.y -= num;\n        break;\n      case 'right':\n        this.x += num;\n        break;\n      case 'down':\n        this.y += num;\n        break;\n      case 'left':\n        this.x -= num;\n        break;\n    }\n\n    let players = this.checkCollision();\n    this.setCollision(vect, players);\n    this.game.sendCoords();\n\n    if (this.checkDeath()) {\n      this.setDeath();\n      return;\n    };\n  };\n\n  this.isIntersect = function (x, y) {\n    if (x >= this.x && x <= this.x + this.size && y >= this.y && y <= this.y + this.size) {\n      return true;\n    }\n    return false;\n  };\n\n  this.checkDeath = function () {\n    return this.x + this.size < 0 || this.y + this.size < 0 || this.x > this.game.fieldW || this.y > this.game.fieldH;\n  };\n\n  this.setCollision = function (vect, players) {\n    players.forEach(player => {\n      let pushObj = {};\n\n      switch (vect) {\n        case 'up':\n          pushObj.collisionW = player.y + player.size - this.y + 1;\n          pushObj.vector = 'up';\n          break;\n\n        case 'right':\n          pushObj.collisionW = this.x + this.size - player.x + 1;\n          pushObj.vector = 'right';\n          break;\n\n        case 'down':\n          pushObj.collisionW = this.y + this.size - player.y + 1;\n          pushObj.vector = 'down';\n          break;\n\n        case 'left':\n          pushObj.collisionW = player.x + player.size - this.x + 1;\n          pushObj.vector = 'left';\n      }\n\n      player.push(pushObj.collisionW, pushObj.vector);\n    });\n  };\n\n  this.checkCollision = function () {\n    let collisionPlayers = [];\n    this.game.players.forEach(player => {\n      if (!player || player.id === this.id) return;\n\n      let collision = player.isIntersect(this.x, this.y) || player.isIntersect(this.x + this.size, this.y) || player.isIntersect(this.x + this.size, this.y + this.size) || player.isIntersect(this.x, this.y + this.size);\n\n      if (collision) collisionPlayers.push(player);\n    });\n    return collisionPlayers;\n  };\n\n  this.startMove = function (vector) {\n    console.log(`starting moving by ${vector}`);\n    this.vector = vector;\n    this.push(this.MOVE_WIDTH);\n\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n\n    this.interval = setInterval(() => {\n      this.push(this.MOVE_WIDTH);\n    }, this.MOVE_SPEED);\n  };\n\n  this.stopMove = function () {\n    clearInterval(this.interval);\n    this.interval = null;\n    this.vector = null;\n  };\n\n  this.setInitialCoords = function (num = null) {\n    let id = num || this.id;\n\n    this.x = id % 2 ? 745 : 40;\n    this.y = id < 2 ? 40 : 525;\n  };\n\n  this.setInitialColor = function () {\n    this.colorIndex = customColor ? customColor : this.id;\n  };\n}\n\nmodule.exports = Player;\n\n//# sourceURL=webpack:///./src/server/Player.js?");

/***/ }),

/***/ "./tests sync recursive \\.js$":
/*!**************************!*\
  !*** ./tests sync \.js$ ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./Game.test.js\": \"./tests/Game.test.js\",\n\t\"./Player.test.js\": \"./tests/Player.test.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./tests sync recursive \\\\.js$\";\n\n//# sourceURL=webpack:///./tests_sync_\\.js$?");

/***/ }),

/***/ "./tests/Game.test.js":
/*!****************************!*\
  !*** ./tests/Game.test.js ***!
  \****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_server_Game_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../src/server/Game.js */ \"./src/server/Game.js\");\n/* harmony import */ var _src_server_Game_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_src_server_Game_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _src_server_Player_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/server/Player.js */ \"./src/server/Player.js\");\n/* harmony import */ var _src_server_Player_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_src_server_Player_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _src_server_Display_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/server/Display.js */ \"./src/server/Display.js\");\n/* harmony import */ var _src_server_Display_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_src_server_Display_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! assert */ \"assert\");\n/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(assert__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var mock_socket__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mock-socket */ \"./node_modules/mock-socket/dist/mock-socket.js\");\n/* harmony import */ var mock_socket__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(mock_socket__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\ndescribe('add player function test', () => {\n  let game = new _src_server_Game_js__WEBPACK_IMPORTED_MODULE_0___default.a();\n  let player1 = new _src_server_Player_js__WEBPACK_IMPORTED_MODULE_1___default.a();\n  let player2 = new _src_server_Player_js__WEBPACK_IMPORTED_MODULE_1___default.a();\n  let player3 = new _src_server_Player_js__WEBPACK_IMPORTED_MODULE_1___default.a();\n  let player4 = new _src_server_Player_js__WEBPACK_IMPORTED_MODULE_1___default.a();\n\n  it('should set id of player on add', () => {\n    game.addPlayer(player1);\n    game.addPlayer(player2);\n    game.addPlayer(player3);\n    game.addPlayer(player4);\n\n    assert__WEBPACK_IMPORTED_MODULE_3___default.a.equal(player1.id, 0, 'after add set id of 0');\n    assert__WEBPACK_IMPORTED_MODULE_3___default.a.equal(player2.id, 1, 'after add set id of 1');\n    assert__WEBPACK_IMPORTED_MODULE_3___default.a.equal(player3.id, 2, 'after add set id of 2');\n    assert__WEBPACK_IMPORTED_MODULE_3___default.a.equal(player4.id, 3, 'after add set id of 3');\n  });\n\n  it('should add player on free space', () => {\n    delete game.players[2];\n\n    game.addPlayer(player3);\n    assert__WEBPACK_IMPORTED_MODULE_3___default.a.equal(game.players[2], player3, 'add player3 on free space');\n  });\n});\n\ndescribe('add display function test', () => {\n  let ws = {\n    on: function () {}\n  };\n  let game = new _src_server_Game_js__WEBPACK_IMPORTED_MODULE_0___default.a();\n  let display1 = new _src_server_Display_js__WEBPACK_IMPORTED_MODULE_2___default.a(ws);\n  let display2 = new _src_server_Display_js__WEBPACK_IMPORTED_MODULE_2___default.a(ws);\n  let display3 = new _src_server_Display_js__WEBPACK_IMPORTED_MODULE_2___default.a(ws);\n  let display4 = new _src_server_Player_js__WEBPACK_IMPORTED_MODULE_1___default.a(ws);\n\n  it('should set id of display on add', () => {\n    game.addDisplay(display1);\n    game.addDisplay(display2);\n    game.addDisplay(display3);\n    game.addDisplay(display4);\n\n    assert__WEBPACK_IMPORTED_MODULE_3___default.a.equal(display1.id, 0, 'after add set id of 0');\n    assert__WEBPACK_IMPORTED_MODULE_3___default.a.equal(display2.id, 1, 'after add set id of 1');\n    assert__WEBPACK_IMPORTED_MODULE_3___default.a.equal(display3.id, 2, 'after add set id of 2');\n    assert__WEBPACK_IMPORTED_MODULE_3___default.a.equal(display4.id, 3, 'after add set id of 3');\n  });\n\n  it('should add display on free space', () => {\n    delete game.displays[2];\n\n    game.addDisplay(display3);\n    assert__WEBPACK_IMPORTED_MODULE_3___default.a.equal(game.displays[2], display3, 'add display3 on free space');\n  });\n});\n\ndescribe('delete player function test', () => {\n  it('should delete player in array', () => {\n    let game = new _src_server_Game_js__WEBPACK_IMPORTED_MODULE_0___default.a();\n    let player = new _src_server_Player_js__WEBPACK_IMPORTED_MODULE_1___default.a();\n    game.addPlayer(player);\n\n    game.delPlayer(player);\n    assert__WEBPACK_IMPORTED_MODULE_3___default.a.equal(game.players[0], undefined);\n  });\n\n  it('should send message to display on delete', done => {\n    const server = new mock_socket__WEBPACK_IMPORTED_MODULE_4__[\"Server\"]('ws://localhost:8080');\n    let game = new _src_server_Game_js__WEBPACK_IMPORTED_MODULE_0___default.a();\n    let player = new _src_server_Player_js__WEBPACK_IMPORTED_MODULE_1___default.a();\n    let display1 = new _src_server_Display_js__WEBPACK_IMPORTED_MODULE_2___default.a(server, game);\n\n    game.addPlayer(player);\n    game.addDisplay(display1);\n\n    let messagesNum = 0;\n\n    const client = new WebSocket('ws://localhost:8080');\n\n    client.onmessage = event => {\n      let data = JSON.parse(event.data);\n      if (data.type == 'DELETE_PLAYER') {\n        messagesNum++;\n      }\n    };\n\n    game.delPlayer(player);\n\n    setTimeout(() => {\n      assert__WEBPACK_IMPORTED_MODULE_3___default.a.equal(messagesNum, 1, '1 display send signal');\n      server.stop(done);\n    }, 100);\n  });\n});\n\n/* describe('game object test', function() {\n  it ('should get coords of all players', function() {\n    let game = new Game('a123', 'single'); \n\n    let player0 = new Player(game, 0);\n    let player1 = new Player(game, 1);\n    let player2 = new Player(game, 2);\n    let player3 = new Player(game, 3);\n\n    let trueCoords=[player0.x, player0.y,\n                    player1.x, player1.y,\n                    player2.x, player2.y,\n                    player3.x, player3.y];\n\n    let coords = game.getAllCoords();  \n    \n    let isTrue = true;\n\n    for (let i = 0; i < trueCoords.length; i++) {\n      if (trueCoords.length !== coords.length) {\n        isTrue=false;\n        continue;\n      }\n\n      if (trueCoords[i] !== coords[i]) {\n        isTrue = false; \n      }\n    }\n\n    assert.equal(isTrue, true);\n  });\n  it ('should get coords of all players (undefined test)', function() {\n    let game = new Game('a123', 'single'); \n\n    let player0 = new Player(game, 0);\n    let player1 = new Player(game, 1);\n    let player2 = new Player(game, 2);\n    let player3 = new Player(game, 3);\n\n    delete game.players[2];\n\n    let trueCoords=[player0.x, player0.y,\n                    player1.x, player1.y,\n                    undefined, undefined,\n                    player3.x, player3.y];\n\n    let coords = game.getAllCoords();  \n    \n    let isTrue = true;\n\n    for (let i = 0; i < trueCoords.length; i++) {\n      if (trueCoords.length !== coords.length) {\n        isTrue=false;\n        continue;\n      }\n\n      if (trueCoords[i] !== coords[i]) {\n        isTrue = false; \n      }\n    }\n\n    assert.equal(isTrue, true);\n  });\n});*/\n\n//# sourceURL=webpack:///./tests/Game.test.js?");

/***/ }),

/***/ "./tests/Player.test.js":
/*!******************************!*\
  !*** ./tests/Player.test.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*import assert from 'assert';\n\nimport Player from '../src/js/player/playerObj.js';\n\ndescribe('player object test', function() {\n\n\n  it('on creation should pass himself to array', function() {\n    let game = {\n      players: [] \n    }\n    let player = new Player(game);\n    assert.equal(game.players.length, 1);\n  });\n\n\n  it('first player should have x = 40, y = 40', function() {\n    let game = {\n      players: [] \n    }\n    let player = new Player(game);\n    assert(player.x === 40 && player.y === 40);\n  });\n\n  it('second player should have x = 745, y = 40', function() {\n    let game = {\n      players: [] \n    }\n    let player1 = new Player(game);\n    let player = new Player(game);\n    assert(player.x === 745 && player.y === 40);\n  });\n\n  it('third player should have x = 40, y = 525', function() {\n    let game = {\n      players: [] \n    }\n    let player3 = new Player(game, 2);\n    let player2 = new Player(game, 2);\n    let player = new Player(game, 2);\n    assert(player.x === 40 && player.y === 525);\n  }); \n\n  it('forth player should have x = 745, y = 525', function() {\n     let game = {\n      players: [] \n    }     \n    let player3 = new Player(game, 3);\n    let player2 = new Player(game, 3);\n    let player1 = new Player(game, 3);\n    let player = new Player(game, 3);\n    assert(player.x === 745 && player.y === 525);\n  });\n\n  it('should set death when left side under the field', function() {\n    let game = {\n      players: [] \n    }\n    let player = new Player(game, 0); \n    player.x = -81;\n    player.y = 20;\n    player.size = 80;\n    assert(player.checkDeath());\n  });\n\n  it('should not set death when left side on the field', function() {\n    let game = {\n      players: [],\n      fieldW: 870,\n      fieldH: 640 \n    }\n    let player = new Player(game, 0); \n    player.x = -79;\n    player.y = 20;\n\n    assert(!player.checkDeath());\n  });\n  \n  it('should set death when right side out of the field', function() {\n    let game = {\n      players: [],\n      fieldW: 870,\n      fieldH: 640 \n    }\n    let player = new Player(game, 0); \n    player.x = 871;\n    player.y = 20;\n    player.size = 80;\n\n    assert(player.checkDeath());\n  });\n\n  it('should return intersect = true when cell is inside', function() {\n    let game = {\n      players: [] \n    }\n    let player = new Player(game, 0); \n\n    assert.equal(player.isIntersect(40, 40), true);\n  });\n \n  function makeIntersectTest(corner) {\n    let cell = {};\n    switch(corner) {\n    case 0: \n      cell.x = 39;\n      cell.y = 39;\n      break;\n    case 1: \n      cell.x = 120;\n      cell.y = 39;\n      break;\n    case 2: \n      cell.x = 120;\n      cell.y = 120;\n      break;\n    case 3: \n      cell.x = 39;\n      cell.y = 120;\n      break;\n    }\n    it(`should return intersect = false when cell with x = ${cell.x}, y = ${cell.y} is outside`, function() {\n      let game = {\n        players: [] \n      }\n      let player0 = new Player(game, 0);\n    \n      assert.equal(player0.isIntersect(cell.x, cell.y), false);\n    });\n  }\n  \n  for(let i = 0; i < 4; i++) {\n    makeIntersectTest(i); \n  }\n  function makeCollisionTest(corner){\n    let game = {\n      players: [] \n    }\n    let player0 = new Player(game, 0);\n    let player1 = new Player(game, 1);\n    it(\"should get collision on \" + corner + \" corner\", function() {\n       switch(corner) {\n       case 0: \n         player1.x = 40 - 70;\n         player1.y = 40 - 70;\n         break;\n       case 1:\n         player1.x = 40 + 70;\n         player1.y = 40 - 70;\n       case 2:\n         player1.x = 40 + 70;\n         player1.y = 40 + 70;\n       case 3:\n         player1.x = 40 - 70;\n         player1.y = 40 + 70;\n       } \n       assert.equal(player0.checkCollision().length, 1);\n    });\n  } \n \n\n  for (var i = 0; i < 4; i++) {\n    makeCollisionTest(i); \n  }\n  it('should change coord on push move', function() {\n    let game = {\n      players: [],\n      fieldW: 870,\n      fieldH: 640,\n      sendCoords: function() {}\n    }\n    let player = new Player(game, 0);\n\n    player.vector = 'right';\n\n    player.push(10);\n\n    assert.equal(player.x, 50);\n  });\n  function makePushCollisionTest1P(vector) {\n    let game = {\n      players: [],\n      fieldW: 870,\n      fieldH: 640,\n      sendCoords: function() {}\n    }\n    let player0 = new Player(game);\n    let player1 = new Player(game);\n\n    player1.x = player0.x;\n    player1.y = player0.y;\n\n    player0.vector = vector;\n\n    let expected;\n    let moveWidth = 10;\n\n    switch(vector) {\n      case 'up':\n        player1.y = player0.y - 80;\n        expected = player1.y - moveWidth;\n        break;\n      case 'right':\n        player1.x = player0.x + 80;\n        expected = player1.x + moveWidth;\n        break;\n      case 'down':\n        player1.y = player0.y + 80;\n        expected = player1.y + moveWidth;\n        break;\n      case 'left':\n        player1.x = player0.y - 80;\n        expected = player1.x - moveWidth;\n        break;\n    }\n\n    it(`should change coord of second player on ${vector} collision`, function() {\n\n      player0.push(moveWidth);\n\n      assert.equal(vector == 'down' || vector == 'up' ? player1.y : player1.x, expected);\n    });\n  }\n\n  makePushCollisionTest1P('up');\n  makePushCollisionTest1P('right');\n  makePushCollisionTest1P('left');\n  makePushCollisionTest1P('down');\n\n\n  function makePushCollisionTest2P(vector) {\n    let game = {\n      players: [],\n      fieldW: 870,\n      fieldH: 640,\n      sendCoords: function() {},\n    }\n\n    let player0 = new Player(game);\n    let player1 = new Player(game);\n    let player2 = new Player(game);\n\n    player1.x = player0.x;\n    player1.y = player0.y;\n\n    player2.x = player0.x;\n    player2.y = player0.y;\n\n    player0.vector = vector;\n\n    let expected;\n    let moveWidth = 10;\n\n    switch(vector) {\n      case 'up':\n        player0.y = 500;\n        player1.y = player0.y - 80;\n        player2.y = player1.y - 80;\n        expected = player2.y - moveWidth;\n        break;\n      case 'right':\n        player1.x = player0.x + 80;\n        player2.x = player1.x + 80;\n        expected = player2.x + moveWidth;\n        break;\n      case 'down':\n        player1.y = player0.y + 80;\n        player2.y = player1.y + 80;\n        expected = player2.y + moveWidth;\n        break;\n      case 'left':\n        player0.x = 700;\n        player1.x = player0.x - 80;\n        player2.x = player1.x - 80;\n        expected = player2.x - moveWidth;\n        break;\n    }\n\n    it(`should change coord of third player on ${vector} collision`, function() {\n\n      player0.push(moveWidth);\n\n      assert.equal(vector == 'down' || vector == 'up' ? player2.y : player2.x, expected);\n    });\n  }\n\n\n  makePushCollisionTest2P('up');\n  makePushCollisionTest2P('right');\n  makePushCollisionTest2P('down');\n  makePushCollisionTest2P('left');\n\n  it('should stop move on stopMove', function() {\n    let game = {\n      players: [],\n      fieldW: 870,\n      fieldH: 640,\n      sendCoords: function() {}\n    }\n\n    let player = new Player(game, 0); \n\n    player.startMove('left');\n    player.stopMove();\n    \n    assert.equal(player.x, 30) \n  });\n\n  it ('should set death on start move for 10px', function() {\n    let game = {\n      players: [],\n      fieldW: 870,\n      fieldH: 640,\n      sendCoords: function() {\n      \n      }\n    }\n\n    let player = new Player(game, 0); \n    player.x = -71;\n\n    player.startMove('left');\n    player.stopMove('left');\n    assert.equal(player.checkDeath(), true) ;\n  });\n\n});*/\n\n//# sourceURL=webpack:///./tests/Player.test.js?");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"assert\");\n\n//# sourceURL=webpack:///external_%22assert%22?");

/***/ })

/******/ });